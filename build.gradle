import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'lab6-project'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.12.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
    options.docEncoding = 'UTF-8'
}

tasks.register('serverJar', Jar) {
    archiveBaseName = 'server'
    from sourceSets.main.output
    include 'Server/**'
    manifest {
        attributes 'Main-Class': 'Server.ServerMain'
    }
}

tasks.register('clientJar', Jar) {
    archiveBaseName = 'client'
    from sourceSets.main.output
    manifest {
        attributes 'Main-Class': 'Client.ClientMain'
    }
}

tasks.register('shadowServerJar', ShadowJar) {
    archiveBaseName = 'server-fat'
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
    manifest {
        attributes 'Main-Class': 'Server.ServerMain'
    }
}

tasks.register('buildAll') {
    dependsOn tasks.named('serverJar'), tasks.named('clientJar'), tasks.named('shadowServerJar')
    group = 'build'
    description = 'Builds all artifacts'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}